---
title: Extras
---

{{! ----------------------------------------------------------------- }}

<h2>Extra demos</h2>

<ul>
  <li><a href="http://codepen.io/desandro/full/jEpxqJ/">Image carousel with fancy selected style</a></li>
  <li>
    <a href="http://codepen.io/desandro/pen/dPdVNM">Setting image caption</a> or
    <a href="http://codepen.io/desandro/pen/OPQxpO">with vanilla JS</a>
  </li>
  <li>
    <a href="http://codepen.io/desandro/pen/pvxONO">Select cell on staticClick</a> or
    <a href="http://codepen.io/desandro/pen/OPBoWx">with vanilla JS</a>
  </li>
  <li><a href="http://codepen.io/desandro/pen/dMjbjR">Vertical scrollable navigation on the side</a></li>
  <li>
    <a href="http://codepen.io/desandro/pen/VYVEbM">Set initial focus on Flickity carousel</a> or
    <a href="http://codepen.io/desandro/pen/JoemRR">with vanilla JS</a>,
    so that carousel can be keyboard navigated on initial page load
  </li>
  <li><a href="http://codepen.io/desandro/pen/LVVqBR">Previous &amp; next buttons in top right corner</a></li>
  <li>
    <a href="http://codepen.io/desandro/pen/MagWrN">Adding <code>is-previous</code> and <code>is-next</code> cell classes</a> or
    <a href="http://codepen.io/desandro/pen/wWQQwN">with <code>wrapAround</code></a>
  </li>
  <li><a href="http://codepen.io/desandro/pen/KVwVqa/">Fade in carousel for no Flash Of Unstyled Content (FOUC)</a> or
    <a href="http://codepen.io/desandro/pen/JGoGpm">with vanilla JS</a>
  </li>
  <li><a href="http://codepen.io/desandro/pen/xZWqWM/">Disabling &amp; enabling dragging</a>
    or <a href="http://codepen.io/desandro/pen/adYJEQ/">with vanilla JS</a></li>
  <li><a href="http://codepen.io/desandro/pen/xVBpqG">Set options at media queries</a></li>
</ul>

{{! ----------------------------------------------------------------- }}

<h2>Custom navigation UI</h2>

<p>With the <a href="api.html">Flickity API</a>, you can build custom carousel navigation UI.</p>

<div class="example duo">
  <div class="example__code duo__cell">
    ``` js
    // init Flickity
    var $carousel = $('.carousel').flickity({
      prevNextButtons: false,
      pageDots: false
    });
    // Flickity instance
    var flkty = $carousel.data('flickity');
    // elements
    var $cellButtonGroup = $('.button-group--cells');
    var $cellButtons = $cellButtonGroup.find('.button');

    // update selected cellButtons
    $carousel.on( 'select.flickity', function() {
      $cellButtons.filter('.is-selected')
        .removeClass('is-selected');
      $cellButtons.eq( flkty.selectedIndex )
        .addClass('is-selected');
    });

    // select cell on button click
    $cellButtonGroup.on( 'click', '.button', function() {
      var index = $(this).index();
      $carousel.flickity( 'select', index );
    });
    // previous
    $('.button--previous').on( 'click', function() {
      $carousel.flickity('previous');
    });
    // next
    $('.button--next').on( 'click', function() {
      $carousel.flickity('next');
    });
    ```
  </div>
  {{> custom-nav }}
</div>

{{! ----------------------------------------------------------------- }}

<h2>Module loaders</h2>

{{! ----------------------------------------------------------------- }}

<h3>RequireJS</h3>

<p>Flickity supports <a href="http://requirejs.org/">RequireJS</a>.</p>

<p>You can require <code>flickity.pkgd.js</code>.</p>

``` js
requirejs( [
  'path/to/flickity.pkgd.js',
], function( Flickity ) {
  var flickity = new Flickity( '.carousel', {...});
});
```

<p>To use Flickity as a jQuery plugin with RequireJS and flickity.pkgd.js, you need to call <a href="https://www.npmjs.com/package/jquery-bridget">jQuery Bridget</a>.</p>

``` js
// require the require function
requirejs( [ 'require', 'jquery', 'path/to/flickity.pkgd.js' ],
  function( require, $, Flickity ) {
    // require jquery-bridget, it's included in flickity.pkgd.js
    require( [ 'jquery-bridget/jquery-bridget' ],
    function( jQueryBridget ) {
      // make Flickity a jQuery plugin
      jQueryBridget( 'flickity', Flickity, $ );
      // now you can use $().flickity()
      $('.carousel').flickity({...});
    }
  );
});
```

<p>Or, you can manage dependencies with <a href="http://bower.io">Bower</a>. Set <code>baseUrl: <span class="string">"bower_components/"</span></code> and set a config path for all your application code.</p>

``` js
requirejs.config({
  baseUrl: 'bower_components/',
  paths: {
    app: '../'
  }
});

requirejs( [
  'flickity/js/index',
  'app/my-component.js'
], function( Flickity, myComp ) {
  var iso = new Flickity( '.carousel', {...});
});
```

<p>You can require Bower dependencies and use Flickity as a jQuery plugin with jQuery Bridget.</p>

``` js
requirejs.config({
  baseUrl: '../bower_components',
  paths: {
    jquery: 'jquery/jquery'
  }
});

requirejs( [
    'jquery',
    'flickity/js/index',
    'jquery-bridget/jquery-bridget'
  ],
  function( $, Flickity ) {
    // make Flickity a jQuery plugin
    $.bridget( 'flickity', Flickity, $ );
    // now you can use $().flickity()
    $('.carousel').flickity({...});
});
```

<p>As a stand-alone package, Flickity does not include <code>imagesLoaded</code>, <code>asNavFor</code>, and <code>bgLazyLoad</code> code. You can require these packages separately.</p>

``` js
requirejs( [
    'flickity-imagesloaded/flickity-imagesloaded',
    'flickity-as-nav-for/as-nav-for'
  ],
  function( Flickity ) {
    // now use imagesLoaded and asNavFor
    var flkty = new Flickity( '.carousel-a', {
      imagesLoaded: true,
      asNavFor: '.carousel-b'
    });
});
```

{{! ----------------------------------------------------------------- }}

<h3>Browserify</h3>

<p>Flickity works with <a href="http://browserify.org/">Browserify</a>. Install <a href="https://www.npmjs.com/package/flickity">Flickity with npm</a>.</p>

``` bash
npm install flickity
```

``` js
var Flickity = require('flickity');

var flickity = new Flickity( '.carousel', {
  // options
});
```

<p>To use Flickity as a jQuery plugin with Browserify, you need to call <a href="https://www.npmjs.com/package/jquery-bridget">jQuery Bridget</a>.</p>

``` bash
npm install jquery-bridget
```

``` js
var $ = require('jquery');
var jQueryBridget = require('jquery-bridget');
var Flickity = require('flickity');

// make Flickity a jQuery plugin
jQueryBridget( 'flickity', Flickity, $ );
// now you can use $().flickity()
$('.carousel').flickity({...});
```

<p>As a stand-alone package, Flickity does not include <code>imagesLoaded</code>, <code>asNavFor</code>, and <code>bgLazyLoad</code> code. You can install and require the
  <a href="https://www.npmjs.com/package/flickity-imagesloaded"><code>flickity-imagesloaded</code></a>,
  <a href="https://www.npmjs.com/package/flickity-as-nav-for"><code>flickity-as-nav-for</code></a>, and
  <a href="https://www.npmjs.com/package/flickity-bg-lazyload"><code>flickity-bg-lazyload</code></a>
  packages separately.</p>

``` bash
npm install flickity-imagesloaded
npm install flickity-as-nav-for
npm install flickity-bg-lazyload
```

``` js
var Flickity = require('flickity-imagesloaded');
require('flickity-as-nav-for');

// now use imagesLoaded and asNavFor
var flkty = new Flickity( '.carousel-a', {
  imagesLoaded: true,
  asNavFor: '.carousel-b'
});
```

{{! ----------------------------------------------------------------- }}

<h3>Webpack</h3>

<p>Install Flickity with npm.</p>

``` bash
npm install flickity
```

<p>You can then <code>require('flickity')</code>.</p>

``` js
// main.js
var Flickity = require('flickity');

var flkty = new Flickity( '.carousel', {
  // options...
});
```

<p>Run webpack.</p>

``` bash
webpack main.js bundle.js
```

<p><code>imagesLoaded</code>, <code>asNavFor</code>, <code>bgLazyLoad</code> and jQuery plugin functionality need to be installed separately, <a href="#browserify">similar to using Browserify</a>.</p>

{{! ----------------------------------------------------------------- }}

<h2>Browser support</h2>

<p>Flickity v2 supports IE10+, Android 4+, Safari for iOS 5+, Firefox 16+, and Chrome 12+.</p>

<p>For IE8+ and Android 2.3+ support, try <a href="http://flickity.metafizzy.co/v1/">Flickity v1</a>.</p>

{{! ----------------------------------------------------------------- }}

<h2>Upgrading from v1</h2>

<p>Flickity v2 dropped browser support for IE8, IE9, and Android 2.3. Nearly all options, methods, and code for Flickity v1 is backwards compatibile with Flickity v2.</p>

<h3>Breaking changes</h3>

<ul>
  <li>
    <p><a href="events.html">jQuery events</a> are namespaced with <code>.flickity</code>.</p>
    ``` js
    // v1, will not work with v2
    $carousel.on( 'staticClick', function() {...})
    // v2, add .flickity namespace
    $carousel.on( 'staticClick.flickity', function() {...})
    ```
  </li>
  <li><code>jquery-bridget/jquery.bridget</code> path renamed to <code>jquery-bridget/jquery-bridget</code></li>
</ul>

<h3>Compatible changes</h3>

<ul>
  <li><a href="events.html#select"><code>select</code> event</a> added in place of <code>cellSelect</code>. <code>cellSelect</code> event will continue to work.</li>
  <li><a href="index.html#initialize-with-html">HTML initialization</a> can be done with <code>data-flickity</code>. Flickity v2 is backwards compatible with previous code: <code>js-flickity</code> class and <code>data-flickity-options</code> attribute.</li>
  <li>IE8 helper dependencies removed: eventie, get-style-property, doc-ready</li>
</ul>

<h3>New features</h3>

<ul>
  <li><a href="options.html#groupcells">groupCells</a> - group cells together as individual slides</li>
  <li><a href="options.html#adaptiveheight">adaptiveHeight</a> - change carousel height to selected cell</li>
  <li><a href="options.html#bglazyload">bgLazyLoad</a> - lazyload background images</li>
  <li><a href="events.html#scroll">scroll event</a> - do cool stuff like progress bars and parallax effects</li>
  <li><a href="options.html#dragthreshold">dragThreshold</a> - add more wiggle room for touch vertical scrolling</li>
</ul>

{{! ----------------------------------------------------------------- }}

<h2>Issues</h2>

<h3>Reduced test cases</h3>

<p>Creating a reduced test case is the best way to debug problems and report issues. Read <a href="http://css-tricks.com/reduced-test-cases/">CSS Tricks</a> on why they&rsquo;re so great.</p>

<p>Create a reduced test case for Flickity by forking any one of the <a href="http://codepen.io/desandro/tag/flickity-docs">CodePen demos</a> from these docs.</p>

<ul>
  <li>A reduced test case clearly demonstrates the bug or issue.</li>
  <li>It contains the bare minimum HTML, CSS, and JavaScript required to demonstrate the bug.</li>
  <li>A link to your production site is <b>not</b> a reduced test case.</li>
</ul>

<p>Creating a reduced test case is the best way to get your issue addressed. They help you point out the problem. They help us debug the problem. They help others understand the problem.</p>

{{! ----------------------------------------------------------------- }}

<h3>Submitting issues</h3>

<p>Report <a href="https://github.com/metafizzy/flickity/issues/">issues on GitHub</a>. Make sure to include a <strong>reduced test case</strong>. Without a reduced test case, your issue may be closed.</p>

{{! ----------------------------------------------------------------- }}

<h3>Feature requests</h3>

<p>Help us select new features by looking over <a href="https://github.com/metafizzy/flickity/labels/feature%20request">requested features on the GitHub issue tracker</a> and adding your <strong>+1 reaction</strong> to features you&rsquo;d like to see added.</p>

{{! ----------------------------------------------------------------- }}
