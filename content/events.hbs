---
title: Events
---

{{! ----------------------------------------------------------------- }}

<h2>Event binding</h2>

{{! ----------------------------------------------------------------- }}

<h3>jQuery event binding</h3>

<p>Bind events with jQuery with standard jQuery event methods <code>.on()</code>, <code>.off()</code>, and <code>.one()</code>. Event names are namespaced with <code>.flickity</code>.</p>

``` js
// jQuery
function listener(/* parameters */) {
  console.log('eventName happened');
}
// bind event listener
$carousel.on( 'eventName.flickity', listener );
// unbind event listener
$carousel.off( 'eventName.flickity', listener );
// bind event listener to trigger once. note ONE not ON
$carousel.one( 'eventName.flickity', function() {
  console.log('eventName happened just once');
});
```

{{! ----------------------------------------------------------------- }}

<h3>Vanilla JS event binding</h3>

<p>Bind events with vanilla JS with <code>.on()</code>, <code>.off()</code>, and <code>.once()</code> methods.</p>

``` js
// vanilla JS
function listener(/* parameters */) {
  console.log('eventName happened');
}
// bind event listener
flkty.on( 'eventName', listener );
// unbind event listener
flkty.off( 'eventName', listener );
// bind event listener to trigger once. note ONCE not ONE or ON
flkty.once( 'eventName', function() {
  console.log('eventName happened just once');
});
```

{{! ----------------------------------------------------------------- }}

<h2>Events demo</h2>

<p>Play around with this carousel to see how events are triggered.</p>

{{> events-table }}

{{! ----------------------------------------------------------------- }}

<h2>Flickity events</h2>

{{! ----------------------------------------------------------------- }}

<h3>select</h3>

<p>Triggered when a slide is selected.</p>

<p>This event was previously <code>cellSelect</code> in Flickity v1. <code>cellSelect</code> will continue to work in Flickity v2.</p>

``` js
// jQuery
$carousel.on( 'select.flickity', function() {
  console.log( 'Flickity select ' + flkty.selectedIndex )
})
// vanilla JS
flkty.on( 'select', function() {...})
```

{{> edit-demo default="emVgqE" vanilla_js="ogEwXe" }}

{{! ----------------------------------------------------------------- }}

<h3>settle</h3>

<p>Triggered when the slider is settled at its end position.</p>

``` js
// jQuery
$carousel.on( 'settle.flickity', function() {
  console.log( 'Flickity settled at ' + flkty.selectedIndex )
})
// vanilla JS
flkty.on( 'settle', function() {...})
```

{{> edit-demo default="yyvXYL" vanilla_js="myXweK" }}

{{! ----------------------------------------------------------------- }}

<h3>scroll</h3>

<p>Triggered when the slider moves.</p>

``` js
// jQuery
$carousel.on( 'scroll.flickity', function( event, progress ) {
  console.log( 'Flickity scrolled ' + progress * 100 + '%' )
})
// vanilla JS
flkty.on( 'scroll', function( progress ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">progress</span></code>
  <span class="argument__type"><i>Number</i></span>
  <span class="argument__description">How far slider has moved, from <code>0</code> at the first slide to <code>1</code> at the end</span>
</p>

<div class="example duo">
  <div class="example__code duo__cell">
    ``` js
    $carousel.on( 'scroll.flickity', function( event, progress ) {
      progress = Math.max( 0, Math.min( 1, progress ) );
      $progressBar.width( progress * 100 + '%' );
    });
    ```
  </div>
  {{> progress-bar}}
</div>

<p>Use <code>scroll</code> to create parallax effects.</p>

<div class="example duo">
  <div class="example__code duo__cell">
    ``` js
    var flkty = $carousel.data('flickity');
    var $imgs = $('.carousel-cell img');

    $carousel.on( 'scroll.flickity', function( event, progress ) {
      flkty.slides.forEach( function( slide, i ) {
        var img = $imgs[i];
        var x = ( slide.target + flkty.x ) * -1/3;
        img.style.transform = 'translateX( ' + x  + 'px)';
      });
    });
    ```
  </div>
  {{> keyhole }}
</div>

<div class="example">
  <div class="example__code">
    ``` js
    var cellRatio = 0.6; // outerWidth of cell / width of carousel
    var bgRatio = 0.8; // width of background layer / width of carousel
    var fgRatio = 1.25; // width of foreground layer / width of carousel
    
    $carousel.on( 'scroll.flickity', function( event, progress ) {
      moveParallaxLayer( $background, bgRatio, progress );
      moveParallaxLayer( $foreground, fgRatio, progress );
    });
    // trigger initial scroll
    $carousel.flickity('reposition');
    
    var flkty = $carousel.data('flickity');
    var count = flkty.slides.length - 1;
    
    function moveParallaxLayer( $layer, layerRatio, progress ) {
      var ratio = cellRatio * layerRatio;
      $layer.css({
        left: ( 0.5 - ( 0.5 + progress * count ) * ratio ) * 100 + '%'
      });
    }
    ```
  </div>
  <div class="example__demo">
    {{> parallax }}
  </div>
</div>

{{! ----------------------------------------------------------------- }}

<h3>dragStart</h3>

<p>Triggered when dragging starts and the slider starts moving.</p>

``` js
// jQuery
$carousel.on( 'dragStart.flickity', function( event, pointer ) {...})
// vanilla JS
flkty.on( 'dragStart', function( event, pointer ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object, like <code>mousedown</code>, <code>touchstart</code>, or <code>pointerdown</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">pointer</span></code>
  <span class="argument__type"><i>Event</i> or <i>Touch</i></span>
  <span class="argument__description">The event object that has <code>.pageX</code> and <code>.pageY</code>.</span>
</p>

{{> edit-demo default="KwQqWw" vanilla_js="RNQgpB" }}

{{! ----------------------------------------------------------------- }}

<h3>dragMove</h3>

<p>Triggered when dragging moves and the slider moves.</p>

``` js
// jQuery
$carousel.on( 'dragMove.flickity', function( event, pointer, moveVector ) {...})
// vanilla JS
flkty.on( 'dragMove', function( event, pointer, moveVector ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object, like <code>mousemove</code>, <code>touchmove</code>, or <code>pointermove</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">pointer</span></code>
  <span class="argument__type"><i>Event</i> or <i>Touch</i></span>
  <span class="argument__description">The event object that has <code>.pageX</code> and <code>.pageY</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">moveVector</span></code>
  <span class="argument__type"><i>Object</i></span>
  <span class="argument__description">How far the pointer has moved from its start position <code>{ x: 20, y: -30 }</code>.</span>
</p>

{{> edit-demo default="azqwWW" vanilla_js="YPeQVL" }}

{{! ----------------------------------------------------------------- }}

<h3>dragEnd</h3>

<p>Triggered when dragging ends.</p>

``` js
// jQuery
$carousel.on( 'dragEnd.flickity', function( event, pointer ) {...})
// vanilla JS
flkty.on( 'dragEnd', function( event, pointer ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object, like <code>mouseup</code>, <code>touchend</code>, or <code>pointerup</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">pointer</span></code>
  <span class="argument__type"><i>Event</i> or <i>Touch</i></span>
  <span class="argument__description">The event object that has <code>.pageX</code> and <code>.pageY</code>.</span>
</p>

{{> edit-demo default="ByYZRb" vanilla_js="jEZwwO" }}

{{! ----------------------------------------------------------------- }}

<h3>pointerDown</h3>

<p>Triggered when the user's pointer (mouse, touch, pointer) presses down.</p>

``` js
// jQuery
$carousel.on( 'pointerDown.flickity', function( event, pointer ) {...})
// vanilla JS
flkty.on( 'pointerDown', function( event, pointer ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object, like <code>mousedown</code>, <code>touchstart</code>, or <code>pointerdown</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">pointer</span></code>
  <span class="argument__type"><i>Event</i> or <i>Touch</i></span>
  <span class="argument__description">The event object that has <code>.pageX</code> and <code>.pageY</code>.</span>
</p>

{{> edit-demo default="zxRzzZ" vanilla_js="ByYZZE" }}

{{! ----------------------------------------------------------------- }}

<h3>pointerMove</h3>

<p>Triggered when the user's pointer moves.</p>

``` js
// jQuery
$carousel.on( 'pointerMove.flickity', function( event, pointer, moveVector ) {...})
// vanilla JS
flkty.on( 'pointerMove', function( event, pointer, moveVector ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object, like <code>mousemove</code>, <code>touchmove</code>, or <code>pointermove</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">pointer</span></code>
  <span class="argument__type"><i>Event</i> or <i>Touch</i></span>
  <span class="argument__description">The event object that has <code>.pageX</code> and <code>.pageY</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">moveVector</span></code>
  <span class="argument__type"><i>Object</i></span>
  <span class="argument__description">How far the pointer has moved from its start position <code>{ x: 20, y: -30 }</code>.</span>
</p>

{{> edit-demo default="XJZgap" vanilla_js="JoLZMP" }}

{{! ----------------------------------------------------------------- }}

<h3>pointerUp</h3>

<p>Triggered when the user's pointer unpresses.</p>

``` js
// jQuery
$carousel.on( 'pointerUp.flickity', function( event, pointer ) {...})
// vanilla JS
flkty.on( 'pointerUp', function( event, pointer ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object, like <code>mouseup</code>, <code>touchend</code>, or <code>pointerup</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">pointer</span></code>
  <span class="argument__type"><i>Event</i> or <i>Touch</i></span>
  <span class="argument__description">The event object that has <code>.pageX</code> and <code>.pageY</code>.</span>
</p>

{{> edit-demo default="qExjXV" vanilla_js="pvawrj" }}

{{! ----------------------------------------------------------------- }}

<h3>staticClick</h3>

<p>Triggered when the user's pointer is pressed and unpressed and has not moved enough to start dragging.</p>

<p><code>click</code> events are hard to detect with draggable UI, as they are triggered whenever a user drags. Flickity's <code>staticClick</code> event resolves this, as it is triggered when the user has not dragged.</p>

``` js
// jQuery
$carousel.on( 'staticClick.flickity', function( event, pointer, cellElement, cellIndex ) {...})
// vanilla JS
flkty.on( 'staticClick', function( event, pointer, cellElement, cellIndex ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">pointer</span></code>
  <span class="argument__type"><i>Event</i> or <i>Touch</i></span>
  <span class="argument__description">The event object that has <code>.pageX</code> and <code>.pageY</code>.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">cellElement</span></code>
  <span class="argument__type"><i>Element</i></span>
  <span class="argument__description">If a cell was clicked, the element.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">cellIndex</span></code>
  <span class="argument__type"><i>Integer</i></span>
  <span class="argument__description">If a cell was clicked, the cell&rsquo;s zero-based index.</span>
</p>

<p>Use the <code><span class="params">cellElement</span></code> and <code><span class="params">cellIndex</span></code> parameters to detect what cell was clicked.</p>

<div class="example">
  <div class="example__code">
    ``` js
    $carousel.on( 'staticClick.flickity', function( event, pointer, cellElement, cellIndex ) {
      // dismiss if cell was not clicked
      if ( !cellElement ) {
        return;
      }
      // change cell background with .is-clicked
      $carousel.find('.is-clicked').removeClass('is-clicked');
      $( cellElement ).addClass('is-clicked');
      $logger.text( 'Cell ' + ( cellIndex + 1 )  + ' clicked' );
    });
    ```
  </div>
  {{> static-click }}
</div>

{{! ----------------------------------------------------------------- }}

<h3>lazyLoad</h3>

<p>Triggered after an image has been loaded with <a href="options.html#lazyload"><code>lazyLoad</code></a>.</p>

``` js
// jQuery
$carousel.on( 'lazyLoad.flickity', function( event, cellElement ) {...})
// vanilla JS
flkty.on( 'lazyLoad', function( event, cellElement ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">cellElement</span></code>
  <span class="argument__type"><i>Element</i></span>
  <span class="argument__description">The image's cell element.</span>
</p>

<p><code>lazyLoad</code> is triggered on both valid images and broken images. Check <code>event.type</code> to see if the loaded image was loaded with <code>load</code> or <code>error</code>. Use <code>event.target</code> to access the loaded image.</p>

``` js
// jQuery
$carousel.on( 'lazyLoad.flickity', function( event, cellElement ) {
  var img = event.originalEvent.target;
  console.log( event.originalEvent.type, img.src );
  // load or error on src
});

// vanilla JS
flkty.on( 'lazyLoad', function( event, cellElement ) {
  var img = event.target;
  console.log( event.type, img.src );
});
```

{{> edit-demo default="RPqMra" vanilla_js="VLVXjv" }}

{{! ----------------------------------------------------------------- }}


<h3>bgLazyLoad</h3>

<p>Triggered after a background image has been loaded with <a href="options.html#bglazyload"><code>bgLazyLoad</code></a>.</p>

``` js
// jQuery
$carousel.on( 'bgLazyLoad.flickity', function( event, element ) {...})
// vanilla JS
flkty.on( 'bgLazyLoad', function( event, element ) {...})
```

<p class="argument">
  <code class="argument__code"><span class="params">event</span></code>
  <span class="argument__type"><i>Event</i></span>
  <span class="argument__description">Original <code>event</code> object.</span>
</p>
<p class="argument">
  <code class="argument__code"><span class="params">element</span></code>
  <span class="argument__type"><i>Element</i></span>
  <span class="argument__description">The element of the background image.</span>
</p>

